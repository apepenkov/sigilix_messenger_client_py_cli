# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import messages_pb2 as messages__pb2


class MessageServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitChatFromInitializer = channel.unary_unary(
                '/messages.MessageService/InitChatFromInitializer',
                request_serializer=messages__pb2.InitChatFromInitializerRequest.SerializeToString,
                response_deserializer=messages__pb2.InitChatFromInitializerResponse.FromString,
                )
        self.InitChatFromReceiver = channel.unary_unary(
                '/messages.MessageService/InitChatFromReceiver',
                request_serializer=messages__pb2.InitChatFromReceiverRequest.SerializeToString,
                response_deserializer=messages__pb2.InitChatFromReceiverResponse.FromString,
                )
        self.UpdateChatRsaKey = channel.unary_unary(
                '/messages.MessageService/UpdateChatRsaKey',
                request_serializer=messages__pb2.UpdateChatRsaKeyRequest.SerializeToString,
                response_deserializer=messages__pb2.UpdateChatRsaKeyResponse.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/messages.MessageService/SendMessage',
                request_serializer=messages__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=messages__pb2.SendMessageResponse.FromString,
                )
        self.SendFile = channel.unary_unary(
                '/messages.MessageService/SendFile',
                request_serializer=messages__pb2.SendFileRequest.SerializeToString,
                response_deserializer=messages__pb2.SendFileResponse.FromString,
                )
        self.GetNotifications = channel.unary_unary(
                '/messages.MessageService/GetNotifications',
                request_serializer=messages__pb2.GetNotificationsRequest.SerializeToString,
                response_deserializer=messages__pb2.GetNotificationsResponse.FromString,
                )
        self.SubscribeToIncomingNotifications = channel.unary_stream(
                '/messages.MessageService/SubscribeToIncomingNotifications',
                request_serializer=messages__pb2.SubscriptionRequest.SerializeToString,
                response_deserializer=messages__pb2.IncomingNotification.FromString,
                )


class MessageServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitChatFromInitializer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitChatFromReceiver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateChatRsaKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeToIncomingNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitChatFromInitializer': grpc.unary_unary_rpc_method_handler(
                    servicer.InitChatFromInitializer,
                    request_deserializer=messages__pb2.InitChatFromInitializerRequest.FromString,
                    response_serializer=messages__pb2.InitChatFromInitializerResponse.SerializeToString,
            ),
            'InitChatFromReceiver': grpc.unary_unary_rpc_method_handler(
                    servicer.InitChatFromReceiver,
                    request_deserializer=messages__pb2.InitChatFromReceiverRequest.FromString,
                    response_serializer=messages__pb2.InitChatFromReceiverResponse.SerializeToString,
            ),
            'UpdateChatRsaKey': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateChatRsaKey,
                    request_deserializer=messages__pb2.UpdateChatRsaKeyRequest.FromString,
                    response_serializer=messages__pb2.UpdateChatRsaKeyResponse.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=messages__pb2.SendMessageRequest.FromString,
                    response_serializer=messages__pb2.SendMessageResponse.SerializeToString,
            ),
            'SendFile': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFile,
                    request_deserializer=messages__pb2.SendFileRequest.FromString,
                    response_serializer=messages__pb2.SendFileResponse.SerializeToString,
            ),
            'GetNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNotifications,
                    request_deserializer=messages__pb2.GetNotificationsRequest.FromString,
                    response_serializer=messages__pb2.GetNotificationsResponse.SerializeToString,
            ),
            'SubscribeToIncomingNotifications': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeToIncomingNotifications,
                    request_deserializer=messages__pb2.SubscriptionRequest.FromString,
                    response_serializer=messages__pb2.IncomingNotification.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'messages.MessageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessageService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitChatFromInitializer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messages.MessageService/InitChatFromInitializer',
            messages__pb2.InitChatFromInitializerRequest.SerializeToString,
            messages__pb2.InitChatFromInitializerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitChatFromReceiver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messages.MessageService/InitChatFromReceiver',
            messages__pb2.InitChatFromReceiverRequest.SerializeToString,
            messages__pb2.InitChatFromReceiverResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateChatRsaKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messages.MessageService/UpdateChatRsaKey',
            messages__pb2.UpdateChatRsaKeyRequest.SerializeToString,
            messages__pb2.UpdateChatRsaKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messages.MessageService/SendMessage',
            messages__pb2.SendMessageRequest.SerializeToString,
            messages__pb2.SendMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messages.MessageService/SendFile',
            messages__pb2.SendFileRequest.SerializeToString,
            messages__pb2.SendFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messages.MessageService/GetNotifications',
            messages__pb2.GetNotificationsRequest.SerializeToString,
            messages__pb2.GetNotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeToIncomingNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/messages.MessageService/SubscribeToIncomingNotifications',
            messages__pb2.SubscriptionRequest.SerializeToString,
            messages__pb2.IncomingNotification.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
